# üíª Windows Quick Start Backup

## üìå What is this?
This project is designed to create a complete backup of your system's essential user data, which can later be restored seamlessly on a new laptop. This works similar to the "Quick Start" on iPhones where all critical information is transferred.

The goal is to collect and package:
- ‚úÖ Installed Applications (and their reinstallation script)
- ‚úÖ Browser Bookmarks (Chrome & Edge)
- ‚úÖ Driver Files and User Files (organized and zipped)

---

## üì¶ What to Collect
1. **Applications**  
2. **Browser Data**  
3. **Driver Data (files and folders)**

---

## 1Ô∏è‚É£ Applications

### üîç Step 1: Gather Installed Applications
- Script: `App_Data.py`
- This script scans for all installed applications (Win32 + Microsoft Store) and saves the list in `installed_apps.csv`.

### üìÇ Step 2: Automatically Reinstall Applications
- Script: `Re_install_Apps.py`
- On a new laptop, this script reads the CSV file and reinstalls apps:
  - ‚úÖ Reinstalls Microsoft Store apps automatically.
  - ‚ùå Win32 apps need manual installation (or .exe automation if available).
  - üìÑ Success/failure is logged for tracking.

### ‚úÖ Features:
Combines Registry, PowerShell, and file scan to list all apps.
Stores source (Registry, File System, Store).
CSV is used as source for reinstallation.

### ‚ö†Ô∏è Known Limitations / Loop Holes:
- Some apps (especially large IDEs or enterprise tools) may not appear in registry.
- Manual intervention may be needed for apps not listed in Microsoft Store.
- No `.exe` files are included in the CSV unless managed separately.

---

## 2Ô∏è‚É£ Browser Data

### üîç Step 1: Backup Bookmarks
- Script: `Browser_data.py`
- Output: `browser_backup/Chrome_bookmarks.json`, `Edge_bookmarks.json`
- These contain exported bookmarks for Chrome and Edge.

### üìÇ Step 2: Restore on New Laptop
- Open the respective browser and import bookmarks manually or through a script. - needs to be created

### ‚ö†Ô∏è Limitations / Loopholes:
Does not collect:
Saved passwords
Browser history
Extensions or settings
Assumes default user profile is active.

---

## 3Ô∏è‚É£ Driver and User File Backup

### üîç Step 1: Collect Actual Files from Drives
- Script: `Collect_actual_files.py`
- This script:
  - Scans selected drives (e.g., `D:`)
  - Copies user-accessible files to `files_backup_d/`
  - Logs metadata into `file_metadata_d.csv`
  - Logs errors in `scan_errors.log`

### üì¶ Output:
- `d_drive_backup.zip` contains all files, metadata CSV, and logs.

### ‚ö†Ô∏è Known Limitations / Loop Holes:
- Protected or system-owned files are skipped.
- Cannot include locked files or user-profile-restricted files.
- Long file paths (>260 chars) may fail to copy.
- Does not preserve original NTFS permissions.

---

## üîê Create Encrypted Backup Zip

### üó™ Final Step: Bundle Everything into One Zip File
- Script: `main.py` (combined script)
- What it does:
  - Creates a folder windows_quick_start_backup
  - Copies apps, browser, drivers backup data
  - Uses 7-Zip to create windows_quick_start_backup_protected.zip
  - Adds AES-256 encryption with password

### Requirements:
- 7-Zip installed (make sure `7z.exe` is in `C:\Program Files\7-Zip`)
- Adjust password and paths in the script as needed

### ‚ö†Ô∏è Known Limitations / Loop Holes:
- If `7z.exe` path is incorrect, the zip will not be created.
- If the script is inside the folder, it must exclude itself explicitly.
- Passwords are stored in plaintext unless encrypted beforehand.

---

## üìÅ Folder Structure Overview
```
Windows_Quick_Start_Backup_File
‚îú‚îÄ‚îÄ apps
‚îÇ   ‚îú‚îÄ‚îÄ App_Data.py
‚îÇ   ‚îú‚îÄ‚îÄ installed_apps.csv
‚îÇ   ‚îî‚îÄ‚îÄ Re_install_Apps.py
‚îÇ
‚îú‚îÄ‚îÄ browser
‚îÇ   ‚îú‚îÄ‚îÄ Browser_data.py
‚îÇ   ‚îî‚îÄ‚îÄ browser_backup
‚îÇ       ‚îú‚îÄ‚îÄ Chrome_bookmarks.json
‚îÇ       ‚îî‚îÄ‚îÄ Edge_bookmarks.json
‚îÇ
‚îú‚îÄ‚îÄ drivers
‚îÇ   ‚îú‚îÄ‚îÄ Collect_actual_files.py
‚îÇ   ‚îú‚îÄ‚îÄ d_drive_backup.zip
‚îÇ   ‚îî‚îÄ‚îÄ file_metadata_d.csv
‚îÇ
‚îú‚îÄ‚îÄ main.py
```

---

## üë∑ How to Use /Needs to be tested
1. Run `main.py` to generate the final encrypted backup
2. On the new laptop:
   - Extract the zip using the password
   - Run `Re_install_Apps.py` (in admin mode) to reinstall applications
   - Import browser bookmarks manually or with a helper script
   - Restore driver files manually or use device manager

---

## üöÄ Future Enhancements
- Add system settings (Wi-Fi, registry)
- Automate full driver installation 
- Upload zip to cloud
- Generate QR code for download link
- Sync `.exe` installers into backup folder
- Include hadoop big data and deal with large data

---

> Made with ‚ù§Ô∏è to make your laptop transitions smoother.

