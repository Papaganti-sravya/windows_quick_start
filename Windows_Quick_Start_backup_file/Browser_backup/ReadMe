                        What does this code Do

                            Overview
This JSON file (backup_data.json) contains a structured backup of: 
    1. Installed applications (Traditional .exe, Microsoft Store, Portable apps)
    2. Executable file paths for Portable Apps
    3. Browser bookmarks (Google Chrome, Microsoft Edge, Firefox)

This JSON data allows for automated reinstallation and helps users transfer applications and bookmarks to a new laptop.

How to execute :
Open the terminal and execute Bowser_data.py
Command: 
1. you should be in the correct path 
2. python ./Browser_data.py

Key Takeaway of Browser_Data (JSON Backup) 
    1. Best for full backup, including browser bookmarks & .exe paths.
    2. Detects portable apps but doesn’t extract app versions.

Use the Browser_Data (JSON) if:
    1. You need a full backup of installed apps + browser data.
    2. You want to restore .exe applications later.

JSON Output Structure:
    {
    "installed_apps": [
        {
            "name": "Google Chrome",
            "source": "Traditional",
            "version": "123.0.0.1",
            "exe_path": "C:\\Program Files\\Google\\Chrome\\chrome.exe"
        },
        {
            "name": "Spotify",
            "source": "Microsoft Store",
            "version": "N/A",
            "exe_path": null
        },
        {
            "name": "Notepad++ Portable",
            "source": "Portable App",
            "version": "N/A",
            "exe_path": "D:\\PortableApps\\Notepad++\\notepad++.exe"
        }
    ],
    "browser_bookmarks": {
        "Chrome": {
            "roots": {
                "bookmark_bar": {
                    "children": [
                        {
                            "name": "YouTube",
                            "url": "https://www.youtube.com"
                        },
                        {
                            "name": "GitHub",
                            "url": "https://github.com"
                        }
                    ]
                }
            }
        }
    }
}



JSON Fields Explanation:
1.Installed Applications (installed_apps)   
    Field	    Description
    "name"	    The name of the installed application
    "source"	The installation type (Traditional .exe, Microsoft Store, Portable)
    "version"	The version number (if available)
    "exe_path"	The location of the .exe file (for reinstallation)

    Example
    {
        "name": "Google Chrome",
        "source": "Traditional",
        "version": "123.0.0.1",
        "exe_path": "C:\\Program Files\\Google\\Chrome\\chrome.exe"
    }

2️.Browser Bookmarks (browser_bookmarks)
        Field	                            Description
        "Chrome" / "Edge" / "Firefox"	Browser name (contains bookmark data)
        "roots"	                        Stores different bookmark folders
        "bookmark_bar"	                The list of bookmarks saved under the bookmark bar
        "children"	                    List of individual bookmarks
        "name"	                        Bookmark title
        "url"	                        Website URL

    Example
    {
      "name": "GitHub",
      "url": "https://github.com"
    }

                            How to Use This JSON File
1. To Restore Applications
        For Traditional .exe Apps:
            Check "exe_path" field.
            If available, reinstall the app from its path.

        For Microsoft Store Apps:
            Run PowerShell:
                Get-AppxPackage -Name "Spotify" | Foreach-Object { Add-AppxPackage -Register -DisableDevelopmentMode ($_.InstallLocation + '\AppxManifest.xml') }

        For Portable Apps:
            Copy files from the "exe_path" location to the new laptop.

2. To Restore Browser Bookmarks
        For Chrome:
            Open chrome://bookmarks/
            Click Import Bookmarks and select Chrome_bookmarks.json
        For Edge:
            Open edge://favorites/
            Import Edge_bookmarks.json


                        Advantages of This Backup Format
1. Lightweight & Human-Readable – JSON is structured and easy to read.
2. Automatable – Can be used in scripts for automatic restoration.
3. Flexible – Works with multiple app types and browser data.




